import pyarrow as pa
from pydantic import JsonValue

from lenskit.data.types import ID

def is_sorted_coo(data: list[pa.RecordBatch], c1: str, c2: str) -> bool: ...
def argsort_descending(data: pa.Array) -> pa.Int32Array: ...
def negative_mask(n: int, indices: pa.Int32Array) -> pa.BooleanArray:
    """
    Efficiently create a boolean array that is true everywhere except ``indices``.
    """
    ...

def hash_array(arr: pa.Array, /) -> str: ...
def pyon_loads(data: str) -> JsonValue: ...

class IDIndex:
    """
    Backend implementation for ID indexes / vocabularies.
    """
    def __init__(self, ids: pa.Array | None = None): ...
    def get_index(self, id: ID): ...
    def get_indexes(self, ids: pa.Array): ...
    def id_array(self) -> pa.Array: ...
    def __len__(self) -> int: ...
